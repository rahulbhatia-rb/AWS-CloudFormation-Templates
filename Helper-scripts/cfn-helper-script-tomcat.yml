Parameters:
        MyKeyName:
                Type: AWS::EC2::KeyPair::KeyName
Resources:
        MySecurityGroup:
                Type: AWS::EC2::SecurityGroup
                Properties:
                        GroupDescription: My SG with port 22 and port 8080 inbound
                        SecurityGroupIngress:
                                - IpProtocol: tcp
                                  FromPort: 22
                                  ToPort: 22
                                  CidrIp: 0.0.0.0/0
                                - IpProtocol: tcp
                                  FromPort: 8080
                                  ToPort: 8080
                                  CidrIp: 0.0.0.0/0
        MyVMInstance:
                Type: AWS::EC2::Instance
                Metadata:
                        Comment: Deploy a Simple Tomcat App
                        AWS::CloudFormation::Init:
                                config:
                                        packages:
                                                yum:
                                                        java-1.8.0-openjdk.x86_64: []
                                                java-1.8.0-openjdk-deve1: []
                                                tomcat8: []
                                        groups:
                                                groupone: {}
                                                grouptwo:
                                                       gid: "501"
                                        users:
                                                user1:
                                                        groups:
                                                                - groupone
                                                                - grouptwo
                                                        uid: "501"
                                                        homeDir: "/tmp"
                                        sources:
                                                /tmp: "https://testingbucketcreationbyrahulh.s3.amazonaws.com/demo1.zip"
                                        files:
                                                "/etc/cfn/cfn-hup.conf":
                                                        content: !Sub |
                                                          [main]
                                                          stack=${AWS::StackId}
                                                          region=${AWS::Region}
                                                        mode: "000400"
                                                        owner: "root"
                                                        group: "root"
                                                "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
                                                        content: !Sub |
                                                          [cfn-auto-reloader-hook]
                                                          triggers=post.update
                                                          path=Resources.MyVMInstance.Metadata.AWS::CloudFormation::Init
                                                          action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyVMInstance --region ${AWS::Region}
                                                        mode: "000400"
                                                        owner: "root"
                                                        group: "root"

                                        commands:
                                                test1:
                                                        command: "chmod 755 demo.war"
                                                        cwd: "/tmp"
                                                test2:
                                                        command: "sudo yum -y erase java-1.7.0-openjdk.x86_64"
                                                        cwd: "~"
                                                test3:
                                                        command: "rm -rf demo*"
                                                        cwd: "/var/lib/tomcat8/webapps"
                                                test4:
                                                        command: "cp demo.war /var/lib/tomcat8/webapps"
                                                        cwd: "/tmp"

                                        services:
                                                sysvinit:
                                                        tomcat8:
                                                                enabled: "true"
                                                                ensureRunning: "true"

                Properties:
                        ImageId: ami-096fda3c22c1c990a 
                        InstanceType: t2.micro
                        KeyName: !Ref MyKeyName
                        SecurityGroups:
                                - !Ref MySecurityGroup
                        UserData:
                                "Fn::Base64": 
                                   !Sub |
                                     #!/bin/bash -xe
                                     ## Get latest CloudFormation package - These packages change frequently
                                     yum update -y aws-cfn-bootstrap
                                     # Start cfn-init to Install all Metadata content (pacakges, sources, files, commands and services )
                                     /opt/aws/bin/cfn-init -s ${AWS::StackId} -r MyVMInstance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
                                     # Signal the status from cfn-init 
                                     /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource MyVMInstance --region ${AWS::Region}

Outputs:
        AppURL:
                Description: Output of Tomcat Server
                Value: !Sub 'http://${MyVMInstance.PublicDnsName}:8080/demo/hello'





